package com.oracle.ofsc.etadirect.camel.beans;

import com.oracle.ofsc.transforms.ActivityInsertedItem;
import org.apache.camel.Exchange;
import org.apache.camel.processor.aggregate.AggregationStrategy;

import java.util.ArrayList;

public class ActivityInsertAggregator implements AggregationStrategy {

    /**
     * Implements a basic strategy that will generate and array which
     * contains the Activity Insertion (response) objects generated by
     * each attempt to insert an OFSC Activity
     *
     * @param oldExchange - null on first run
     * @param newExchange - always passes in the current Exchange + Body to be aggregated....
     *
     * @return the running aggregation to use for the Exchange that is finally returned when
     * all splits are complete
     */
    @Override
    public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {
        ActivityInsertedItem newBody = (ActivityInsertedItem ) newExchange.getIn().getBody();
        ArrayList<ActivityInsertedItem> list = null;
        if (null == oldExchange) {
            // First Time Insertion - Genesis For The List
            list = new ArrayList<>();
            list.add(newBody);
            newExchange.getIn().setBody(list);
            return newExchange;
        }
        else {
            // A List Already Exists In The Body - Just Add To It
            list = oldExchange.getIn().getBody(ArrayList.class);
            list.add(newBody);
            return oldExchange;
        }
    }
}